
<Heading Level="HeadingLevel.H2">Carousels</Heading>
<Paragraph>
    The <code>Carousel</code> component provides slideshow features for cycling through elements.
</Paragraph>


<DocsSection ComponentName="Carousel" />


@code {
    string img1 = "https://images.unsplash.com/photo-1546519638-68e109498ffc?w=1024";
    string img2 = "https://images.unsplash.com/photo-1519861531473-9200262188bf?w=1024";
    string img3 = "https://images.unsplash.com/photo-1516684378628-240d2c5237f5?w=1024";
    string img4 = "https://images.unsplash.com/photo-1504450758481-7338eba7524a?w=1024";
    string img5 = "https://images.unsplash.com/photo-1474224017046-182ece80b263?w=1024";
    string img6 = "https://images.unsplash.com/photo-1538405505827-e519f0efb68e?w=1024";

    bool showControls = true;
    bool showIndicators = true;
}

<Heading Level="HeadingLevel.H3">Setting Options</Heading>
<p>
    Use the options below to modify the carousel.
</p>


<Carousel id="carousel-1" Width="ComponentSize.p50" ShowControls="@showControls" ShowIndicators="@showIndicators" ImageUrls="@(new[] { img1, img2, img3, img4, img5, img6 })" MarginBottom="Spacing.Four">
</Carousel>

<ButtonGroup>
    <Button IsActive="@showControls" Color="NamedColor.Primary" IsOutline="@(!showControls)" OnClicked="() => showControls = !showControls">Controls</Button>
    <Button IsActive="@showIndicators" Color="NamedColor.Primary" IsOutline="@(!showIndicators)" OnClicked="() => showIndicators = !showIndicators">Indicators</Button>
</ButtonGroup>
