
<Heading Level="HeadingLevel.H2">Carousels</Heading>
<Paragraph>
    The <code>Carousel</code> component provides slideshow features for cycling through elements.
</Paragraph>


<DocsSection ComponentName="Carousel" />


@code {
    Carousel c1;

    string[] imgArr = new string[]
    {
        "https://images.unsplash.com/photo-1546519638-68e109498ffc?w=1024",
        "https://images.unsplash.com/photo-1519861531473-9200262188bf?w=1024",
        "https://images.unsplash.com/photo-1516684378628-240d2c5237f5?w=1024",
        "https://images.unsplash.com/photo-1504450758481-7338eba7524a?w=1024",
        "https://images.unsplash.com/photo-1474224017046-182ece80b263?w=1024",
        "https://images.unsplash.com/photo-1538405505827-e519f0efb68e?w=1024"
    };

    bool showControls = true;
    bool showIndicators = true;
    bool autoStart = true;
    int interval = 3000;

    string latestEvent;

    CarouselTransitionType transitionType = CarouselTransitionType.Slide;
}

<Heading Id="customizing" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="Spacing.Five">Customizing the Carousel</Heading>
<Paragraph>
    Use the options below to modify the carousel.
</Paragraph>

<Div class="col-md-6">
    <Carousel @ref="this.c1"
              Id="carousel-1"
              ShowControls="@showControls"
              ShowIndicators="@showIndicators"
              AutoStart="@autoStart"
              Interval="@interval"
              TransitionType="@transitionType"
              OnSlide='(e) => this.latestEvent = $"Slide - From: {e.From}, To: {e.To}, Direction: {e.Direction}"'
              OnSlid='(e) => this.latestEvent = $"Slid - From: {e.From}, To: {e.To}, Direction: {e.Direction}"'
              style="height: 320px">

        <CarouselItem Id="lead-slide" BackgroundColor="NamedColor.Dark" CaptionHeading="Image Carousel">
            <CaptionHeadingTemplate>
                <Heading Level="HeadingLevel.H5">@context</Heading>
            </CaptionHeadingTemplate>
            <CaptionBodyTemplate>
                <Paragraph>Here are some basketball pictures to show how the <WikiLink Page="Carousel">Carousel</WikiLink> component works.</Paragraph>
            </CaptionBodyTemplate>
        </CarouselItem>
        <CarouselItem Id="img-slide-0" ImageUrl="@imgArr[0]" ImageScaling="ImageScaleMode.Fill" CaptionHeading="Swissshhh!" CaptionBody="The ball has just gone through the sock." BackgroundColor="NamedColor.Dark" />
        <CarouselItem Id="img-slide-1" ImageUrl="@imgArr[1]" ImageScaling="ImageScaleMode.Fill" CaptionHeading="Here we go!" CaptionBody="The rain has gone, and now we can start playing." />
        <CarouselItem Id="img-slide-2" ImageUrl="@imgArr[2]" ImageScaling="ImageScaleMode.Fill" />
        <CarouselItem Id="img-slide-3" ImageUrl="@imgArr[3]" ImageScaling="ImageScaleMode.Fit" BackgroundColor="NamedColor.Warning" CaptionHeading="Arena" CaptionBody="This slide uses ImageScaleMode.Fit to show the entire picture. The background can show on the sides when you resize the page." />
        <CarouselItem Id="img-slide-4" ImageUrl="@imgArr[4]" ImageScaling="ImageScaleMode.Fill" CaptionHeading="Sunset" CaptionBody="Playing basketball at sunset can be refreshing." CustomCaptionBackgroundColor="#ffffffbb" CaptionTextColor="NamedColor.Dark" />
        <CarouselItem Id="img-slide-5" ImageUrl="@imgArr[5]" ImageScaling="ImageScaleMode.Fill" CaptionHeading="Slam dunk!" CaptionBody="This guy just flying through the air all the way from the 3-point line towards the basket." CustomCaptionBackgroundColor="#00000099" />
    </Carousel>

    <Alert Heading="Latest Event" Color="NamedColor.Info" MarginTop="Spacing.Four">
        @latestEvent
    </Alert>
</Div>

<ButtonToolbar MarginTop="Spacing.Four">
    <ButtonGroup>
        <Button IsActive="@showControls" Color="NamedColor.Primary" IsOutline="@(!showControls)" OnClicked="() => showControls = !showControls">Controls</Button>
        <Button IsActive="@showIndicators" Color="NamedColor.Primary" IsOutline="@(!showIndicators)" OnClicked="() => showIndicators = !showIndicators">Indicators</Button>
    </ButtonGroup>
    <ButtonGroup MarginLeft="Spacing.Three">
        <Button Color="NamedColor.Success" IsOutline="true" OnClicked="() => this.c1.CycleAsync()">Cycle</Button>
        <Button Color="NamedColor.Warning" IsOutline="true" OnClicked="() => this.c1.PauseAsync()">Pause</Button>
    </ButtonGroup>
    <ButtonGroup MarginLeft="Spacing.Three">
        <Button Color="NamedColor.Secondary" IsOutline="true" OnClicked="() => this.c1.PreviousAsync()">&lt;- Prev</Button>
        <Button Color="NamedColor.Secondary" IsOutline="true" OnClicked="() => this.c1.NextAsync()">Next -&gt;</Button>
        <Dropdown>
            <DropdownToggleButton Color="NamedColor.Primary" IsOutline="true">Go to</DropdownToggleButton>
            <DropdownMenu>
                <DropdownItem Clicked="() => this.c1.GoToSlideAsync(0)">Slide #1</DropdownItem>
                <DropdownItem Clicked="() => this.c1.GoToSlideAsync(1)">Slide #2</DropdownItem>
                <DropdownItem Clicked="() => this.c1.GoToSlideAsync(2)">Slide #3</DropdownItem>
                <DropdownItem Clicked="() => this.c1.GoToSlideAsync(3)">Slide #4</DropdownItem>
                <DropdownItem Clicked="() => this.c1.GoToSlideAsync(4)">Slide #5</DropdownItem>
                <DropdownItem Clicked="() => this.c1.GoToSlideAsync(5)">Slide #6</DropdownItem>
                <DropdownItem Clicked="() => this.c1.GoToSlideAsync(6)">Slide #7</DropdownItem>
            </DropdownMenu>
        </Dropdown>
    </ButtonGroup>
    <ButtonGroup MarginLeft="Spacing.Three">
        <Button Color="NamedColor.Primary" IsOutline="@(!this.autoStart)" OnClicked="() => this.autoStart = !this.autoStart">Auto-start</Button>
        <Dropdown>
            <DropdownToggleButton Color="NamedColor.Info" IsOutline="true">Interval</DropdownToggleButton>
            <DropdownMenu>
                <DropdownItem Clicked="() => this.interval = 250">250 ms</DropdownItem>
                <DropdownItem Clicked="() => this.interval = 3000">3000 ms</DropdownItem>
            </DropdownMenu>
        </Dropdown>
        <Dropdown>
            <DropdownToggleButton Color="NamedColor.Info" IsOutline="true">Transition</DropdownToggleButton>
            <DropdownMenu>
                <DropdownItem Clicked="() => this.transitionType = CarouselTransitionType.Slide">Slide</DropdownItem>
                <DropdownItem Clicked="() => this.transitionType = CarouselTransitionType.Fade">Fade</DropdownItem>
            </DropdownMenu>
        </Dropdown>
    </ButtonGroup>
</ButtonToolbar>


<Heading Id="images-only" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="Spacing.Five">Images Only</Heading>
<Paragraph>
    The carousel below shows just a deck of images.
</Paragraph>

<Div class="col-md-6">
    <Carousel ImageUrls="@this.imgArr" Interval="2000" ShowControls="true" ShowIndicators="true" />
</Div>


<Heading Id="custom-content" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="Spacing.Five">Custom Content</Heading>
<Paragraph>
    This sample shows you how you can use just about any content in your carousel. Here, we use both a <WikiLink Page="Jumbotron">Jumbotron</WikiLink>
    and a <WikiLink Page="Card">Card</WikiLink> component.
</Paragraph>

<Div class="col-md-6">
    <Carousel Interval="2000" ShowControls="true" ShowIndicators="true">
        <CarouselItem>
            <Jumbotron Heading="Custom Carousel Slide" Lead="How to use a Jumbotron inside of a Carousel component." />
        </CarouselItem>
        <CarouselItem>
            <Card Header="Card Slide Item" Title="Card in a Carousel" Text="Here we have a card inside of a Carousel component." />
        </CarouselItem>
    </Carousel>
</Div>
