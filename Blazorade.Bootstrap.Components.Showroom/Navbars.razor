
<Heading Level="HeadingLevel.H2">Navbar Component</Heading>
<Paragraph>
    The <code>Navbar</code> component is used to produce a responsive navigation header with built-in support for collapsing.
</Paragraph>

<DocsSection ComponentName="Navbar" />



<Heading Id="collapsing" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="Spacing.S5">Collapsing</Heading>
<Paragraph>
    The navbars below show different collapsing behaviour, and how you can specify the breakpoint at which a navbar collapses.
    You can also specify whether you want the Brand section of your navbar to collapse or stay visible also on collapsed navbars.

    From the dropdown below, select the responsive breakpoint at which the menu will expand.
</Paragraph>

@code {
    NavbarExpandBreakpoint Breakpoint = NavbarExpandBreakpoint.XL;
    string Brand;
    public void SetBreakpoint(NavbarExpandBreakpoint breakpoint)
    {
        this.Breakpoint = breakpoint;

        if (this.Breakpoint == NavbarExpandBreakpoint.Always || this.Breakpoint == NavbarExpandBreakpoint.Never)
        {
            this.Brand = $"{this.Breakpoint} Expand";
        }
        else
        {
            this.Brand = $"Expand at {this.Breakpoint}";
        }
    }
}

@{
    this.SetBreakpoint(this.Breakpoint);
}
<Dropdown>
    <DropdownToggleButton Color="NamedColor.Info">Select Breakpoint</DropdownToggleButton>
    <DropdownMenu>
        <DropdownItem Clicked="(e) => { this.SetBreakpoint(NavbarExpandBreakpoint.XL); }" IsActive="this.Breakpoint == NavbarExpandBreakpoint.XL">XL</DropdownItem>
        <DropdownItem Clicked="(e) => { this.SetBreakpoint(NavbarExpandBreakpoint.LG); }" IsActive="this.Breakpoint == NavbarExpandBreakpoint.LG">LG</DropdownItem>
        <DropdownItem Clicked="(e) => { this.SetBreakpoint(NavbarExpandBreakpoint.MD); }" IsActive="this.Breakpoint == NavbarExpandBreakpoint.MD">MD</DropdownItem>
        <DropdownItem Clicked="(e) => { this.SetBreakpoint(NavbarExpandBreakpoint.SM); }" IsActive="this.Breakpoint == NavbarExpandBreakpoint.SM">SM</DropdownItem>
        <DropdownItem Clicked="(e) => { this.SetBreakpoint(NavbarExpandBreakpoint.Always); }" IsActive="this.Breakpoint == NavbarExpandBreakpoint.Always">Always Expand</DropdownItem>
        <DropdownItem Clicked="(e) => { this.SetBreakpoint(NavbarExpandBreakpoint.Never); }" IsActive="this.Breakpoint == NavbarExpandBreakpoint.Never">Never Expand</DropdownItem>
    </DropdownMenu>
</Dropdown>

<Navbar BrandText="@this.Brand" ColorScheme="NavbarColor.Dark" BackgroundColor="NamedColor.Dark" ExpandAt="this.Breakpoint" MarginTop="2">
    <NavbarNav>
        <NavItem Text="Item 1" />
        <NavItem Text="Item 2" />
        <DropdownNavItem Text="Dropdown">
            <DropdownItem Text="Link 1" />
            <DropdownItem Text="Link 2" />
        </DropdownNavItem>
    </NavbarNav>
    <NavbarNav MarginLeft="Spacing.Auto">
        <NavItem Item="@(new MenuItem { Text = "About", Url = "https://github.com/MikaBerglund/Blazor-Bootstrap/wiki", OpenInNewTab = true })" />
    </NavbarNav>
</Navbar>

<Paragraph MarginTop="Spacing.S2">
    You can also have the brand section of the <code>Navbar</code> component collapse with the navbar itself.
</Paragraph>
<Navbar BrandText="@this.Brand" CollapseBrand="true" ColorScheme="NavbarColor.Light" BackgroundColor="NamedColor.Light" ExpandAt="this.Breakpoint" Shadow="Shadow.Regular">
    <NavbarNav>
        <NavItem Text="Item 1" />
        <NavItem Text="Item 2" />
        <DropdownNavItem Text="Dropdown">
            <DropdownItem Text="Link 1" />
            <DropdownItem Text="Link 2" />
        </DropdownNavItem>
        <DropdownNavItem Text="Components">
            <DropdownItem Url="carousels">Carousel</DropdownItem>
            <DropdownItem Url="spinners">Spinner</DropdownItem>
        </DropdownNavItem>
    </NavbarNav>
    <NavbarNav MarginLeft="Spacing.Auto">
        <NavItem Item="@(new MenuItem { Text = "About", Url = "https://github.com/MikaBerglund/Blazor-Bootstrap/wiki", OpenInNewTab = true })" />
    </NavbarNav>
</Navbar>
