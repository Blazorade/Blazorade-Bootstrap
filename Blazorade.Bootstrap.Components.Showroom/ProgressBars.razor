@code {
    Spacing headingMarginTop = Spacing.S5;
}

<Heading Level="HeadingLevel.H2">Progress/ProgressBar Component</Heading>
<Paragraph>
    The <Anchor Url="https://getbootstrap.com/docs/4.5/components/progress/" OpenInNewTab="true">Progress component</Anchor>
    is used to display progress bars, including stacked bars, animated backgrounds, and text labels.
</Paragraph>

<DocsSection ComponentName="ProgressBar" />

<Heading Id="basic-progress-bar" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="@headingMarginTop">Basic Progress Bars</Heading>
<Paragraph>
    A basic progress bar example.
</Paragraph>

<Progress>
    <ProgressBar MaxValue="100" MinValue="0" Value="10"></ProgressBar>
</Progress>
&nbsp;
<Progress>
    <ProgressBar MaxValue="100" MinValue="0" Value="25"></ProgressBar>
</Progress>
&nbsp;
<Progress>
    <ProgressBar MaxValue="100" MinValue="0" Value="50"></ProgressBar>
</Progress>
&nbsp;
<Progress>
    <ProgressBar MaxValue="100" MinValue="0" Value="75"></ProgressBar>
</Progress>


<Heading Id="progress-bar-percentage" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="@headingMarginTop">Labels</Heading>
<Paragraph>
    Set the ShowPercentage property of the ProgressBar component to true to add percentage labels to a progress bar.
</Paragraph>

<Progress>
    <ProgressBar MaxValue="100" MinValue="0" Value="25" ShowPercentage="true"></ProgressBar>
</Progress>


<Heading Id="progress-bar-height" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="@headingMarginTop">Height</Heading>
<Paragraph>
    Setting a height value on the Progress element sets the height on the bar.
</Paragraph>

<Progress style="height: 5px;">
    <ProgressBar MaxValue="100" MinValue="0" Value="25"></ProgressBar>
</Progress>
&nbsp;
<Progress style="height: 30px;">
    <ProgressBar MaxValue="100" MinValue="0" Value="25"></ProgressBar>
</Progress>


<Heading Id="progress-bar-colors" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="@headingMarginTop">Backgrounds</Heading>
<Paragraph>
    Setting the Color property will allow you to give a progress bar a contextual color.
</Paragraph>

<Progress>
    <ProgressBar MaxValue="100" MinValue="0" Value="10" Color="NamedColor.Success"></ProgressBar>
</Progress>
&nbsp;
<Progress>
    <ProgressBar MaxValue="100" MinValue="0" Value="25" Color="NamedColor.Primary"></ProgressBar>
</Progress>
&nbsp;
<Progress>
    <ProgressBar MaxValue="100" MinValue="0" Value="50" Color="NamedColor.Warning"></ProgressBar>
</Progress>
&nbsp;
<Progress>
    <ProgressBar MaxValue="100" MinValue="0" Value="75" Color="NamedColor.Danger"></ProgressBar>
</Progress>


<Heading Id="progress-bar-stacked" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="@headingMarginTop">Stacked bars</Heading>
<Paragraph>
    Adding multiple ProgressBar elements to a Progress element lets you stack those bars on the same line.
</Paragraph>

<Progress>
    <ProgressBar MaxValue="100" MinValue="0" Value="10" Color="NamedColor.Success"></ProgressBar>
    <ProgressBar MaxValue="100" MinValue="0" Value="15" Color="NamedColor.Primary"></ProgressBar>
    <ProgressBar MaxValue="100" MinValue="0" Value="25" Color="NamedColor.Warning"></ProgressBar>
    <ProgressBar MaxValue="100" MinValue="0" Value="30" Color="NamedColor.Danger"></ProgressBar>
</Progress>


<Heading Id="progress-bar-striped" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="@headingMarginTop">Striped</Heading>
<Paragraph>
    Setting the IsStriped property to true will give a progress bar a striped texture.
</Paragraph>

<Progress>
    <ProgressBar MaxValue="100" MinValue="0" Value="10" Color="NamedColor.Success" IsStriped="true"></ProgressBar>
</Progress>
&nbsp;
<Progress>
    <ProgressBar MaxValue="100" MinValue="0" Value="25" Color="NamedColor.Primary" IsStriped="true"></ProgressBar>
</Progress>
&nbsp;
<Progress>
    <ProgressBar MaxValue="100" MinValue="0" Value="50" Color="NamedColor.Warning" IsStriped="true"></ProgressBar>
</Progress>
&nbsp;
<Progress>
    <ProgressBar MaxValue="100" MinValue="0" Value="75" Color="NamedColor.Danger" IsStriped="true"></ProgressBar>
</Progress>


<Heading Id="progress-bar-animated" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="@headingMarginTop">Animated stripes</Heading>
<Paragraph>
    Adding the IsAnimated property and setting it to true will animate the stripes on a progress bar (be sure to set IsStriped to true!)
</Paragraph>

<Progress>
    <ProgressBar MaxValue="100" MinValue="0" Value="35" Color="NamedColor.Success" IsStriped="true" IsAnimated="true" ShowPercentage="true"></ProgressBar>
</Progress>


<Heading Id="updating-value" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="@headingMarginTop">Updating the progress bar value</Heading>
<Paragraph>
    Shows how you can increase or decrase the value of a <code>ProgressBar</code>.
</Paragraph>
@code {
    ProgressBar pb1;
    double pb1Value = 0;

}
<Progress>
    <ProgressBar @ref="this.pb1" MinValue="0" MaxValue="100" Value="@this.pb1Value" ShowPercentage="true" />
</Progress>
<ButtonGroup>
    <Button Color="NamedColor.Secondary" IsOutline="true" IsDisabled="this.pb1Value <= this.pb1?.MinValue" OnClicked="() => this.pb1Value--">Less</Button>
    <Button Color="NamedColor.Secondary" IsOutline="true" IsDisabled="this.pb1Value >= this.pb1?.MaxValue" OnClicked="() => this.pb1Value++">More</Button>
</ButtonGroup>


<Heading Id="progress-bar-warnings" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="@headingMarginTop">Warnings for values out of range.</Heading>
<Paragraph>
    If Value is greater than max or less than min, the component will log warnings to the browser console. Similarly if Min is greater than Max.
    Check your browser's dev tools.
</Paragraph>

<Progress>
    <ProgressBar MaxValue="100" MinValue="1000" Value="350" Color="NamedColor.Danger" IsStriped="true" IsAnimated="true" ShowPercentage="true"></ProgressBar>
</Progress>