<Heading Level="HeadingLevel.H2">Modal Component</Heading>
<Paragraph>
    Use the Modal component to add dialogs to your site or application for lightboxes, user notifications or other kinds of custom content.
</Paragraph>


<DocsSection ComponentName="Modal" />


@code {
    Modal modal1;
    Modal modal2;
    Modal modal3;
    Modal modal4;
    Modal modal5;
    Modal modalSm;
    Modal modalL;
    Modal modalXl;

    string imageUrl = "https://images.unsplash.com/photo-1472214103451-9374bd1c798e?w=640";
    Spacing headingMarginTop = Spacing.Five;
}


<Heading Id="simple" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="@headingMarginTop">Simple Modals</Heading>
<Paragraph>
    With Blazor Bootstrap you can show simple dialogs with just a single line of markup. See <Anchor Url="https://github.com/MikaBerglund/Blazor-Bootstrap/wiki/Modal#simple-modal" OpenInNewTab="true">the wiki</Anchor> for details.
</Paragraph>

<Button Color="NamedColor.Primary" OnClick="async () => { await this.modal1.ShowAsync(); }">Show Simple Dialog</Button>
<Modal @ref="this.modal1" Body="This is the body text of a simple modal dialog. It does not contain a header or footer, but you can close it by clicking outside of the dialog." />


<Heading Id="custom-header" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="@headingMarginTop">Custom Header</Heading>
<Paragraph>
    You can customize the header of the dialog with the <code>HeaderTemplate</code> template property. See <Anchor Url="https://github.com/MikaBerglund/Blazor-Bootstrap/wiki/Modal#customizing-the-header" OpenInNewTab="true">the wiki</Anchor> for details.
</Paragraph>

<Button Color="NamedColor.Primary" OnClick="async () => { await this.modal2.ShowAsync(); }">Show Custom Header</Button>
<Modal @ref="this.modal2" Header="Custom Header" Body="A dialog with a customized header. You can use any component or HTML element in your custom header. Note that if customizing a header, you also need to add the close button for the dialog. You can use the CloseModalButton component for that.">
    <HeaderTemplate>
        <ModalHeader BackgroundColor="NamedColor.Dark" TextColor="NamedColor.Light">
            <Heading Level="HeadingLevel.H1" Display="HeadingDisplay.Display1">@context</Heading>
            <CloseModalButton />
        </ModalHeader>
    </HeaderTemplate>
</Modal>


<Heading Id="custom-body" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="@headingMarginTop">Custom Body</Heading>
<Paragraph>
    You can provide custom body content for your dialog using the <code>BodyTemplate</code> template property. See <Anchor Url="https://github.com/MikaBerglund/Blazor-Bootstrap/wiki/Modal#customizing-the-body" OpenInNewTab="true">the wiki</Anchor> for details.
</Paragraph>

<Button Color="NamedColor.Primary" OnClick="async () => { await this.modal3.ShowAsync(); }">Show Custom Body</Button>
<Modal @ref="this.modal3" Header="Custom Body Content">
    <BodyTemplate>
        <ModalBody>
            <Card Title="Card with Image" ImageUrl="@imageUrl"></Card>
        </ModalBody>
    </BodyTemplate>
</Modal>


<Heading Id="custom-footer" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="@headingMarginTop">Custom Footer</Heading>
<Paragraph>
    With the help of the <code>FooterTemplate</code> you can specify content for the footer of your dialog. See <Anchor Url="https://github.com/MikaBerglund/Blazor-Bootstrap/wiki/Modal#customizing-the-footer" OpenInNewTab="true">the wiki</Anchor> for details.
</Paragraph>

<Button Color="NamedColor.Primary" OnClick="async () => { await this.modal4.ShowAsync(); }">Show Custom Footer</Button>
<Modal @ref="this.modal4" Header="Custom Footer Content">
    <FooterTemplate>
        <ModalFooter>
            <Button Color="NamedColor.Primary">OK</Button>
            <Button Color="NamedColor.Light" MarginLeft="Spacing.One">Cancel</Button>
        </ModalFooter>
    </FooterTemplate>
</Modal>


<Heading Id="custom-content" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="@headingMarginTop">Custom Content</Heading>
<Paragraph>
    The sample below shows you a dialog where all of these customizations have been combined.
</Paragraph>
<Paragraph>
    Note that the body of the dialog fills the entire area without any padding. This is because this sample specifies
    the <code>Card</code> component directly in the <code>BodyTemplate</code> without using the <code>ModalBody</code>
    wrapper component that would add the padding around the content, as it did in the body example above.
</Paragraph>

<Button Color="NamedColor.Primary" OnClick="async () => { await this.modal5.ShowAsync(); }">Show Dialog</Button>
<Modal @ref="this.modal5" Header="Custom Header">
    <HeaderTemplate>
        <ModalHeader BackgroundColor="NamedColor.Dark" TextColor="NamedColor.Light">
            <Heading Level="HeadingLevel.H1" Display="HeadingDisplay.Display1">@context</Heading>
            <CloseModalButton />
        </ModalHeader>
    </HeaderTemplate>
    <BodyTemplate>
        <Card Title="Card with Image" ImageUrl="@imageUrl"></Card>
    </BodyTemplate>
    <FooterTemplate>
        <ModalFooter>
            <Button Color="NamedColor.Primary">OK</Button>
            <Button Color="NamedColor.Light" MarginLeft="Spacing.One">Cancel</Button>
        </ModalFooter>
    </FooterTemplate>
</Modal>


<Heading Id="modal-sizes" IsAnchor="true" Level="HeadingLevel.H3" MarginTop="@headingMarginTop">Modal Sizes</Heading>
<Paragraph>
    The <code>Modal</code> component supports different sizes.
</Paragraph>

<Button Color="NamedColor.Primary" OnClick="async () => { await this.modalSm.ShowAsync(); }">Small</Button>
<Button Color="NamedColor.Primary" OnClick="async () => { await this.modalL.ShowAsync(); }">Large</Button>
<Button Color="NamedColor.Primary" OnClick="async () => { await this.modalXl.ShowAsync(); }">Extra Large</Button>
<Modal @ref="this.modalSm" Id="modal-sm" Header="Small Dialog" Body="This is a small modal dialog." Size="ModalSize.SM">
</Modal>
<Modal @ref="this.modalL" Id="modal-lg" Header="Large Dialog" Body="This is a large modal dialog." Size="ModalSize.LG">
</Modal>
<Modal @ref="this.modalXl" Id="modal-xl" Header="Extra Large Dialog" Body="This is an extra large modal dialog." Size="ModalSize.XL">
</Modal>


<Paragraph></Paragraph>